class Node:
    def __init__(self, data):
        self.data = data
        self.next = None


class LinkedList:
    def __init__(self):
        self.head = None

    def printlist(self):
        value = linkedlist.head
        while value is not None:
            print(value.data)
            value = value.next

    def AtBeggining(self, new_data):
        new_node = Node(new_data)
        new_node.next = self.head
        self.head = new_node

    def InMiddle(self, prev_node, new_data):
        if prev_node is None:
            print("there isnt one")
            return
        new_node = Node(new_data)
        new_node.next = prev_node.next
        prev_node.next = new_node

    def AtEnd(self, new_data):
        new_node = Node(new_data)
        if self.head is None:
            self.head = new_node
            return
        last = self.head
        while (last.next):
            last = last.next
        last.next = new_node


linkedlist = LinkedList()
linkedlist.head = Node(1)
second = Node(2)
third = Node(3)
linkedlist.head.next = second
second.next = third
linkedlist.AtBeggining(4)

linkedlist.AtEnd(5)
linkedlist.printlist()

